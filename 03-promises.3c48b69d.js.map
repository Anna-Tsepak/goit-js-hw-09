{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,SAQ7B,IAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAEtC,SAASP,EAAcC,EAAUS,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaX,KAAKC,SAAW,GAEpCQ,EAAQ,CAAEX,WAAUC,MAAAQ,IAEpBG,EAAO,CAAEZ,WAAUC,MAAAQ,MAEpBA,MAVkBJ,SAASC,cAAc,yBAc/BQ,iBAAiB,UAAU,SAAAC,GAC1CA,EAAEC,iBAGF,IAFA,IAAIC,EAAaC,OAAOd,EAAMe,OAC1BC,EAAYF,OAAOX,EAAKY,OACnBE,EAAI,EAAGA,EAAIb,EAAOW,MAAOE,IAChCtB,EAAc,EAAIsB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,qCAAgEC,OAAf5B,EAAS,QAAY4B,OAANJ,EAAM,UAGzEK,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAU8B,EAAKP,EAALtB,MAClBwB,EAAA5B,GAAS6B,OAAOK,QACd,wBAAuCH,OAAf5B,EAAS,QAAY4B,OAANE,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\nbtnCreatePromise.addEventListener('submit', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `:белая_галочка: Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `:х: Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","delay1","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.3c48b69d.js.map"}