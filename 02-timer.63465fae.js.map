{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAMMC,EAAOC,SAASC,cAAc,oBAC9BC,EAAYF,SAASC,cAAc,UAEnCE,EAAWH,SAASC,cAAc,sBAClCG,EAAkBJ,SAASC,cAAc,sBACzCI,EAAmBL,SAASC,cAAc,sBAC1CK,EAAiBN,SAASC,cAAc,oBACxCM,EAAeP,SAASC,cAAc,mBAE5CE,EAASK,UAAW,EACpB,IAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACFA,EAAc,GAAK,IAAIH,MACzBI,EAAAC,GAASC,OAAOC,QAAQ,sCACxBjB,EAASK,UAAW,GAEpBL,EAASK,UAAW,IAoB1B,SAASa,EAAgBC,G,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,QAASC,EAAxBJ,EAAwBI,QACzCnB,EAAaoB,YAAcJ,EAC3BjB,EAAcqB,YAAcH,EAC5BnB,EAAgBsB,YAAcF,EAC9BrB,EAAgBuB,YAAcD,GApBtC,EAAA7B,EAAA+B,SAAU7B,EAAMU,GAsBhBN,EAAS0B,iBAAiB,SAAS,WACjC,IAAIC,EAAQC,aAAY,WACtB,IAvBeC,EAGXC,EACAC,EACAC,EAkBAC,EAAY,IAAIvB,KAAKd,EAAKsC,OAAS,IAAIxB,MAC3CV,EAASK,UAAW,EAChB4B,GAAa,IAEff,GA3BaW,EA0BUI,EAvBrBH,EAASK,IAETH,EAAa,IADbD,EAAOD,MAMN,CAAEV,KAJIgB,KAAKC,MAAMR,EAAKG,GAIdX,MAHDe,KAAKC,MAAMR,EAAMG,EAAOD,GAGhBT,QAFNc,KAAKC,MAAMR,EAAOG,EAAOD,EAAQD,GAElBP,QADfa,KAAKC,MAAMR,EAAQG,EAAOD,EAAQD,EAPnC,QA0BXQ,QAAQC,IAAIrB,GAKRe,GAAa,MACflC,EAAUyC,MAAMC,MAAQ,YAG1B3B,EAAAC,GAASC,OAAO0B,QAAQ,sBACxB3C,EAAUyC,MAAMC,MAAQ,QACxBE,cAAchB,MAEf,Q","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n \nimport Notiflix from 'notiflix';\n \nconst text = document.querySelector('#datetime-picker');\nconst timerHtml = document.querySelector('.timer');\n\nconst btnStart = document.querySelector('button[data-start]');\nconst timerSecondsRef = document.querySelector('span[data-seconds]');\nconst timerMinutesRef  = document.querySelector('span[data-minutes]');\nconst timerHoursRef  = document.querySelector('span[data-hours]');\nconst timerDaysRef = document.querySelector('span[data-days]');\n\nbtnStart.disabled = true;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      Notiflix.Notify.failure('Please choose a date in the future');\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n};\nflatpickr(text, options);\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\nfunction onChangeContent({ days, hours, minutes, seconds }) {\n        timerDaysRef.textContent = days;\n        timerHoursRef.textContent = hours;\n        timerMinutesRef.textContent = minutes;\n        timerSecondsRef.textContent = seconds;\n}\nbtnStart.addEventListener('click', () => {\n  let timer = setInterval(() => {\n    let countdown = new Date(text.value) - new Date();\n    btnStart.disabled = true;\n    if (countdown >= 0) {\n      const data = convertMs(countdown);\n      onChangeContent(data)\n      console.log(onChangeContent)\n      //  days.textContent = addLeadingZero(timeObject.days);\n      //  hours.textContent = addLeadingZero(timeObject.hours);\n      //  minutes.textContent = addLeadingZero(timeObject.minutes);\n      //  seconds.textContent = addLeadingZero(timeObject.seconds);\n      if (countdown <= 10000) {\n        timerHtml.style.color = 'tomato';\n      }\n    } else {\n      Notiflix.Notify.success('Countdown finished');\n      timerHtml.style.color = 'black';\n      clearInterval(timer);\n    }\n  }, 1000);\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$text","document","querySelector","$84b9dae4df53835d$var$timerHtml","$84b9dae4df53835d$var$btnStart","$84b9dae4df53835d$var$timerSecondsRef","$84b9dae4df53835d$var$timerMinutesRef","$84b9dae4df53835d$var$timerHoursRef","$84b9dae4df53835d$var$timerDaysRef","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$iU1Pc","Notify","failure","$84b9dae4df53835d$var$onChangeContent","param","days","hours","minutes","seconds","textContent","default","addEventListener","timer","setInterval","ms","minute","hour","day","countdown","value","second","Math","floor","console","log","style","color","success","clearInterval"],"version":3,"file":"02-timer.63465fae.js.map"}